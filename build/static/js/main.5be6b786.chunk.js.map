{"version":3,"sources":["components/SearchBar.jsx","components/Nav.jsx","components/Card.jsx","components/Cards.jsx","components/About.jsx","components/City.jsx","components/HomeCard.jsx","containers/App.js","index.js"],"names":["SearchBar","onSearch","useState","names","setNames","city","setCity","suggestiones","setSuggestiones","useEffect","loadNames","axios","get","response","data","className","onSubmit","e","preventDefault","type","placeholder","value","onChange","matches","length","filter","user","regex","RegExp","name","match","slice","onChangeHandler","target","map","onClick","onSuggestHandler","country","id","Nav","to","Card","min","max","img","onClose","src","width","height","alt","Cards","cities","c","About","City","temp","feels","humidity","weather","HomeCard","temperature","temp_min","temp_max","description","icon","App","latitude","setLatitude","longitude","setLongitude","setTemperature","savePositionState","position","coords","fetchCity","window","navigator","geolocation","getCurrentPosition","res","main","pressure","feels_like","console","log","setCities","oldCities","ciudad","fetch","then","r","json","recurso","undefined","Math","round","wind","speed","clouds","all","latitud","coord","lat","longitud","lon","alert","onFilter","ciudadId","parseInt","path","render","component","exact","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5be6b786.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport './Suggestiones.css';\n\n\n\n\n\nexport default function SearchBar({onSearch}) {\n\n  const [names, setNames] = useState([])\n  const [city, setCity] = useState(\"\");\n  const [suggestiones, setSuggestiones] = useState([])\n\n  useEffect(()=>{\n    const loadNames = async () => {                                                     //BUSCADOR EN TIEMPO REAL\n      const response = await axios.get('https://infinite-shelf-73106.herokuapp.com/') //Ciudades en express, ya que api no otorga json con LISTA de citys..\n      //console.log(response.data.map(el=>el.name))\n      setNames(response.data)\n    }\n    loadNames()\n  },[])\n\n  const onSuggestHandler = (city)=>{      // onClick = onSuggestHandler donde seteo city y devuelvo array vacio para\n    setCity(city)                         // que elimine la lista retornada\n    setSuggestiones([])\n    onSearch(city)\n  }\n\n  const onChangeHandler = (city) =>{\n    let matches = []\n    if(city.length>0){\n      matches = names.filter(user =>{\n        const regex = new RegExp(`${city}`,\"\")\n        return user.name.match(regex)\n      })\n    }\n    //console.log(matches)\n    setSuggestiones(matches.slice(0,15))\n    setCity(city)\n  }\n  \n\n  \n  return (\n    <div className=\"form\">\n    <form  onSubmit={(e) => {\n      e.preventDefault();\n      onSearch(city);\n    }}>\n      <input  \n        type=\"text\"\n        placeholder=\"Busca tu ciudad..\"\n        value={city}\n        onChange={e =>onChangeHandler(e.target.value)}\n        \n      />\n      <input type=\"submit\" value=\"AGREGAR\" />\n      {suggestiones && suggestiones.map((suggestiones)=>\n      <div key={suggestiones.id} className = \"Suggestiones\" onClick={()=>onSuggestHandler(suggestiones.name) }>{suggestiones.name}, {suggestiones.country}</div>\n      )}\n      \n    </form>\n    </div>\n  );\n}\n","import React from 'react';\nimport SearchBar from './SearchBar.jsx';\nimport './Nav.css';\n//importo Link\nimport { Link } from \"react-router-dom\"\n//dentro del componente hago los linkeos necesarios.\n\nfunction Nav({onSearch}) {\n  return (\n    <nav >\n      \n      <div className=\"navbar\">\n      <Link to='/'>\n        <span className=\"brand\">\n          Home\n        </span>\n      </Link>\n      <Link to='/about'>\n        <span className='about'>Contact</span>\n      </Link>\n      </div>\n        <SearchBar\n          onSearch={onSearch}\n        />\n        \n    </nav>\n  );\n};\n\nexport default Nav;","import React from 'react';\nimport './Card.css';\n\nimport { Link } from 'react-router-dom';\n\nexport default function Card ({min, max, name, img, onClose, id}) {\n    return (\n      <div className=\"card\">\n        <div id=\"closeIcon\" className=\"row\">\n            <button onClick={onClose} className=\"btn btn-sm btn-danger\">X</button>\n        </div>\n        <div className=\"card-body\">\n          <Link to={`/ciudad/${id}`}>\n          <h5 className=\"card-title\">{name}</h5>\n          </Link>\n          <div className=\"row\">\n            <div className=\"col-sm-4 col-md-4 col-lg-4\">\n              <p>Min</p>\n              <p>{min}°</p>\n            </div>\n            <div className=\"col-sm-4 col-md-4 col-lg-4\">\n              <p>Max</p>\n              <p>{max}°</p>\n            </div>\n            <div className=\"col-sm-4 col-md-4 col-lg-4\">\n              <img className=\"iconoClima\" src={\"/icons/\"+img+\".svg\"} width=\"100\" height=\"100\" alt=\"\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n};\n","import React from 'react';\nimport './Cards.css';\n\nimport Card from './Card.jsx';\n\nexport default function Cards({cities, onClose}) {\n  return (\n    <div className='cards'>\n      {cities.map(c => <Card\n          key={c.id}\n          id={c.id}\n          max={c.max}\n          min={c.min}\n          name={c.name}\n          img={c.img}\n          onClose={() => onClose(c.id)}\n        /> )}\n    </div>\n  );\n}\n","import React from \"react\";\n//creo el componente funcional About que se mostrará en la ruta /about\nexport default function About(){\n    return(\n        <div>\n            <h4>CONTACTAME</h4>\n            <p>Mandame un mail guachinn</p>\n        </div>\n    )\n}\n","import React from \"react\";\n//creo el componente funcional City que mostrará los detalles de una ciudad\n//recibida por props en la ruta /ciudad/{ciudadId}\nexport default function City({ city }){\n    return(\n        <div className=\"HomeCard\">\n            <div className=\"tittle\"><h1>Tiempo en {city.name}</h1></div>\n            <div className=\"temp\">\n            <p>Temp {city.temp}°C</p><hr />\n            <p>Minima {city.min}°C </p><hr />\n            <p>Máxima {city.max}°C </p><hr />\n            <p>ST {city.feels}</p><hr />\n            <p>Humedad {city.humidity}% </p><hr />\n            </div>\n            <h3>El dia se presenta con {city.weather}.</h3>\n            <img width=\"220px\" src={\"/icons/\"+city.img+\".svg\"} alt=\"\" />\n            <div><h3>Gracias por elegirnos</h3></div>\n            \n        </div>\n    )\n}","import React from \"react\";\r\nimport \"./HomeCard.css\"\r\n\r\nexport default function HomeCard({temperature}){\r\n    return(\r\n        <div className=\"HomeCard\">\r\n            <div className=\"tittle\"><h1>Tiempo en e {temperature.name}</h1></div>\r\n            <div className=\"temp\">\r\n            <p>Temp {temperature.temp}°C</p><hr />\r\n            <p>Minima {temperature.temp_min}°C </p><hr />\r\n            <p>Máxima {temperature.temp_max}°C </p><hr />\r\n            <p>ST {temperature.feels}</p><hr />\r\n            <p>Humedad {temperature.humidity}% </p><hr />\r\n            </div>\r\n            <h3>El dia se presenta con {temperature.description}.</h3>\r\n            <img width=\"220px\" src={\"/icons/\"+temperature.icon+\".svg\"} alt=\"\" />\r\n            <div><h2>Tiempo en principales ciudades de Argentina</h2></div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Nav from '../components/Nav.jsx';\nimport Cards from '../components/Cards.jsx';\n// importo los componentes About y City\nimport About from '../components/About';\nimport City from '../components/City';\nimport HomeCard from '../components/HomeCard.jsx';\nimport axios from 'axios'\nimport { Route } from 'react-router-dom';\n\nconst apiKey = '6a9b9651318ede2644e620f696ebfaf1';\n\n\n\n\n\n\n\nfunction App() {\n  \n  const [latitude, setLatitude] = useState(0);\n  const [longitude, setLongitude] = useState(0);\n  const [temperature, setTemperature] = useState(0);\n\n  const savePositionState = (position)=>{\n    setLatitude(position.coords.latitude);\n    setLongitude(position.coords.longitude);\n  }\n\nconst fetchCity = async () => {\n  try {\n     window.navigator.geolocation.getCurrentPosition(savePositionState);\n    const res = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=60d505bb48f9c02e8d1f29a621cd125f&units=metric&lang=es`)\n    setTemperature(\n      {name: res.data.name,\n       temp: res.data.main.temp,\n       temp_min: res.data.main.temp_min,\n       temp_max: res.data.main.temp_max,\n       pressure: res.data.main.pressure,\n       humidity: res.data.main.humidity,\n       description: res.data.weather[0].description,\n       icon: res.data.weather[0].icon,\n       feels: res.data.main.feels_like\n      }\n       \n       \n      )\n    \n  } catch (error) {\n    console.log(error)\n  }\n}\n//console.log(temperature)\nuseEffect(() => {\n  fetchCity();\n}, [latitude,longitude]);\n\n\n  \n\n  const [cities, setCities] = useState([]);\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\n  }\n\n  \n  \n  function onSearch(ciudad) {\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric&lang=es`)\n      .then(r => r.json())\n      .then((recurso) => {\n        if(recurso.main !== undefined){\n          const ciudad = {\n            min: Math.round(recurso.main.temp_min),\n            max: Math.round(recurso.main.temp_max),\n            img: recurso.weather[0].icon,\n            id: recurso.id,\n            wind: recurso.wind.speed,\n            temp: recurso.main.temp,\n            feels:recurso.main.feels_like,\n            humidity:recurso.main.humidity,\n            name: recurso.name,\n            weather: recurso.weather[0].description,\n            clouds: recurso.clouds.all,\n            latitud: recurso.coord.lat,\n            longitud: recurso.coord.lon\n          };\n          setCities(oldCities => [...oldCities, ciudad]);\n        } else {\n          alert(\"Ciudad no encontrada\");\n        }\n      });\n  }\n  \n  function onFilter(ciudadId) {\n    let ciudad = cities.filter(c => c.id === parseInt(ciudadId));\n    if(ciudad.length > 0) {\n        return ciudad[0];\n    } else {\n        return null;\n    }\n  }\n  \n  \n  \n  \n  //const [rosario, setRosario] = useState(\"rosario\");\n\n\n\n  //useEffect(() => {\n   // onSearch(rosario);\n  //}, [rosario]); \n\n  \n\n\n\n  \n  return (\n    <div className=\"App\">\n      <Route path='/' render={() => <Nav onSearch={onSearch}/>} fetchCity = {fetchCity} />\n      <Route path='/about' component={About}/>\n      <Route exact path='/' render={() =>  <HomeCard temperature= {temperature}/> }/>\n      <Route exact path='/' render={() =>  <Cards cities={cities} onClose={onClose} /> }/>\n      <Route exact path='/ciudad/:ciudadId' \n             render={({match}) => (<City city={onFilter(match.params.ciudadId)}/>)}/>\n      <hr />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\n//importo BrowserRouter de la librería react-router-dom (previamente instalada)\nimport { BrowserRouter } from 'react-router-dom';\n//envolveré mi aplicación en BrowserRouter\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}